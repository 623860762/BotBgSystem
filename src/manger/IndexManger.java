package manger;import java.io.File;import java.util.ArrayList;import java.util.HashMap;import java.util.Map;import org.apache.lucene.analysis.standard.StandardAnalyzer;import org.apache.lucene.index.IndexReader;import org.apache.lucene.index.IndexWriter;import org.apache.lucene.index.IndexWriterConfig;import org.apache.lucene.index.Term;import org.apache.lucene.store.NIOFSDirectory;import org.apache.lucene.util.Version;import weibo4j.org.json.JSONArray;import weibo4j.org.json.JSONObject;public class IndexManger implements Manger {		/**	 * 将内容追加至索引库中	 * @param pUid		用户ID	 * @param pJson		需添加的内容	 * @return Map		Result:OK	 * 					Indexed:num	 */	public static Map<String,Object> appendIndex(String pUid, JSONObject pJson){		Map<String, Object> mapRet = new HashMap<String, Object>();		return mapRet;	}		/**	 * 根据起始ID和终止ID，从索引库中删除某条索引	 * @param pUid		用户ID	 * @param pJson		需删除的内容	 * @return			Result:OK	 * 					deleted:num	 */	public static Map<String,Object> deleteIndex(String pUid,JSONObject pJson){		Map<String, Object> mapRet = new HashMap<String, Object>();		try {			JSONArray indexToDel = pJson.getJSONArray("Parameter");						IndexWriterConfig qwc = new IndexWriterConfig(Version.LUCENE_35, new StandardAnalyzer(Version.LUCENE_35));			IndexWriterConfig awc = new IndexWriterConfig(Version.LUCENE_35, new StandardAnalyzer(Version.LUCENE_35));						IndexWriter qWriter =  new IndexWriter(NIOFSDirectory.open(new File("/Users/Felix/Documents/Index/Index_Meishi/QuestionMeiShiIndexLtp1010")), qwc);			IndexWriter aWriter =  new IndexWriter(NIOFSDirectory.open(new File("/Users/Felix/Documents/Index/Index_Meishi/AnswerMeiShiIndexLtp1010")), awc);			String index ="";			int nCount =0;			for(int i=0;i!=indexToDel.length();i++){				index = indexToDel.getString(i);				Term delTerm = new Term("ID", index);				qWriter.deleteDocuments(delTerm);				aWriter.deleteDocuments(delTerm);				nCount++;			}			qWriter.commit();			aWriter.commit();			qWriter.forceMergeDeletes();			aWriter.forceMergeDeletes();			qWriter.close();			aWriter.close();						mapRet.put("Result", "OK");			mapRet.put("Deleted", nCount);		} catch (Exception e) {			e.printStackTrace();		}							return mapRet;	}			/**	 * 重新打开索引库	 * @param pUid	 */	public static void reOpenIndex(String pUid){			}}