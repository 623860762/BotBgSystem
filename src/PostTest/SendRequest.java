package PostTest;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.OutputStreamWriter;import java.io.PrintWriter;import java.io.UnsupportedEncodingException;import java.net.HttpURLConnection;import java.net.URL;import java.net.URLConnection;import java.net.URLEncoder;import java.util.List;import java.util.Map;import weibo4j.org.json.JSONArray;import weibo4j.org.json.JSONObject;public class SendRequest {	public static String sendRequestByUrl(String type, String url,			String param, boolean isEncode) {		String ret = "";		try {			if (isEncode) {				param = URLEncoder.encode(param, "UTF-8");			}			if (type.equals("get")) {				ret = sendGet(url, param);			} else {				ret = sendPost(url, param);			}		} catch (UnsupportedEncodingException e) {			e.printStackTrace();		}		return ret;	}	/**	 * 向指定URL发送GET方法的请求	 * 	 * @param url	 *            发送请求的URL	 * @param param	 *            请求参数，请求参数应该是name1=value1&name2=value2的形式。	 * @return URL所代表远程资源的响应	 */	public static String sendGet(String url, String param) {		String result = "";		BufferedReader in = null;		String header = "";		try {			String urlName = url + "?" + param;			URL realUrl = new URL(urlName);			// 打开和URL之间的连接			URLConnection conn = realUrl.openConnection();			// 设置通用的请求属性			conn.setRequestProperty("accept", "*/*");			conn.setRequestProperty("connection", "Keep-Alive");			conn.setRequestProperty("user-agent",					"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)");			conn.setRequestProperty("Content-Type",					"text/x-json; charset=uft-8");			// 建立实际的连接			conn.connect();			// 获取所有响应头字段			header = conn.getHeaderField(0);			Map<String, List<String>> map = conn.getHeaderFields();			// 遍历所有的响应头字段			for (String key : map.keySet()) {				System.out.println(key + "--->" + map.get(key));			}			// 定义BufferedReader输入流来读取URL的响应			in = new BufferedReader(					new InputStreamReader(conn.getInputStream()));			String line;			while ((line = in.readLine()) != null) {				result += "\n" + line;			}		} catch (Exception e) {			System.out.println("发送GET请求出现异常！" + e);			return "remote error";		}		// 使用finally块来关闭输入流		finally {			try {				if (in != null) {					in.close();				}			} catch (IOException ex) {				ex.printStackTrace();			}		}		return result;	}	/**	 * 向指定URL发送POST方法的请求	 * 	 * @param url	 *            发送请求的URL	 * @param param	 *            请求参数，请求参数应该是name1=value1&name2=value2的形式。	 * @return URL所代表远程资源的响应	 */	public static String sendPost(String url, String param) {		OutputStreamWriter out = null;		BufferedReader in = null;		String result = "";		String header = "";		try {			URL realUrl = new URL(url);			// 打开和URL之间的连接			URLConnection conn = realUrl.openConnection();			// 发送POST请求必须设置如下两行			conn.setDoOutput(true);			conn.setDoInput(true);						// 设置通用的请求属性			conn.setRequestProperty("accept", "*/*");			conn.setRequestProperty("connection", "Keep-Alive");//			conn.setRequestProperty("user-agent",//					"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)");						conn.setRequestProperty("Content-Type",					"application/x-www-form-urlencoded; charset=uft-8");//			conn.setRequestProperty("Content-Length", String.valueOf(param//					.length()));			// 获取URLConnection对象对应的输出流			out = new OutputStreamWriter(conn.getOutputStream(), "UTF-8");			// 发送请求参数			out.write(param);			// flush输出流的缓冲			out.flush();			// 定义BufferedReader输入流来读取URL的响应			in = new BufferedReader(					new InputStreamReader(conn.getInputStream()));			String line;			while ((line = in.readLine()) != null) {				//result += "\n" + line;				result += line;			}		} catch (Exception e) {			e.printStackTrace();			System.out.println("发送POST请求出现异常！" + e);			return "remote error";		}		// 使用finally块来关闭输出流、输入流		finally {			try {				if (out != null) {					out.close();				}				if (in != null) {					in.close();				}			} catch (IOException ex) {				ex.printStackTrace();			}		}		return result;	}					public static void main(String[] args) throws Exception{		JSONObject json = new JSONObject();		json.put("UID", "3097372115");		JSONArray jsonArray = new JSONArray();				JSONObject json1 = new JSONObject();		json1.put("IID","wh_10000000");		json1.put("qContent", "美食推是什么");		json1.put("aContent", "一款潮人吃货发现美食的神器。在这里，你可以分享你身边的美食，标记你想吃的美味，打造你的食尚专辑，找到你中意的餐厅");				JSONObject json2 = new JSONObject();		json2.put("IID","wh_10000001");		json2.put("qContent", "怎么玩");		json2.put("aContent", "分享你身边的美食，与吃货们一同探讨；标记你想吃的美味与好友分享；打造你的食尚专辑，获得网友的追捧；找到中意的餐厅，与好友一起聚聚；关注超级吃货，了解食尚风向标。");				JSONObject json3 = new JSONObject();		json3.put("IID","wh_10000002");		json3.put("qContent", "能干什么");		json3.put("aContent", "分享你身边的美食，与吃货们一同探讨；标记你想吃的美味与好友分享；打造你的食尚专辑，获得网友的追捧；找到中意的餐厅，与好友一起聚聚；关注超级吃货，了解食尚风向标。");				JSONObject json4 = new JSONObject();		json4.put("IID","wh_10000003");		json4.put("qContent", "何发布分享");		json4.put("aContent", "点击导航中的快速发布分享操作即可，类似发布微博。如果你的分享涉及某餐厅，可以以此餐厅名为话题进行分享，这样系统会将你的分享自动关联此餐厅。");				JSONObject json5 = new JSONObject();		json5.put("IID","wh_10000004");		json5.put("qContent", "什么是专辑");		json5.put("aContent", "专辑是风格的小世界，吃货们可以把想吃的");				JSONObject json6 = new JSONObject();		json6.put("IID","wh_10000005");		json6.put("qContent", "如何发专辑");		json6.put("aContent", "专辑是风格的小世界，吃货们可以把想吃的");				JSONObject json7 = new JSONObject();		json7.put("IID","wh_10000006");		json7.put("qContent", "如何创建专辑");		json7.put("aContent", "专辑是风格的小世界，吃货们可以把想吃的");				JSONObject json8 = new JSONObject();		json8.put("IID","wh_10000007");		json8.put("qContent", "如何记录我喜欢的");		json8.put("aContent", "浏览任何一条分享时，点击喜欢");				JSONObject json9 = new JSONObject();		json9.put("IID","wh_10000008");		json9.put("qContent", "如何记录我想吃的美味");		json9.put("aContent", "浏览任何一条分享时，点击喜欢");				JSONObject json10 = new JSONObject();		json10.put("IID","wh_10000009");		json10.put("qContent", "我如何能获取最新的美食优惠信息");		json10.put("aContent", "关注@美食推 和@京城美食探店");								jsonArray.put(json1);		jsonArray.put(json2);		jsonArray.put(json3);		jsonArray.put(json4);		jsonArray.put(json5);		jsonArray.put(json6);		jsonArray.put(json7);		jsonArray.put(json8);		jsonArray.put(json9);		jsonArray.put(json10);		json.put("Parameter", jsonArray);		json.put("GroupInfo", "10.88.15.134,1099,CorpusManger");		//json.put("GroupInfo", "127.0.0.1,1099,CorpusManger");						//System.out.println(data);		//System.out.println(json.toString(5));						JSONObject jsonSearch = new JSONObject();		jsonSearch.put("UID", "111111111");		jsonSearch.put("Keywords", "专辑");		jsonSearch.put("Page", "1");		jsonSearch.put("PageSize", "1");		jsonSearch.put("GroupInfo", "10.88.15.134,1099,CorpusManger");				//System.out.println(jsonSearch.toString(5));													//		String strRet = SendRequest.sendPost("http://127.0.0.1:8080/BotBgSystem/api/appendIndex", "data="+json.toString());//		String strRet = SendRequest.sendPost("http://10.88.15.134:8080/BotBgSystem/api/appendIndex", "data="+json.toString());//		String strRet = SendRequest.sendPost("http://10.88.15.134:8080/BotBgSystem/api/deleteIndex", "data="+json.toString());//		String strRet = SendRequest.sendPost("http://10.88.15.134:8080/BotBgSystem/api/corpusSearch", "data="+jsonSearch.toString());//		System.out.println(strRet);					}}